version: "3"
networks:
  micro-net:
    driver: bridge
volumes:
  api-gateway-node-modules:
  booking-service-node-modules:
  flights-service-node-modules:
services:
  api_gateway:
    build: ./API-Gateway
    networks:
      - micro-net
    ports:
      - "3001:3001"
    volumes:
      - ./API-Gateway:/developer/nodejs/api-gateway
      - api-gateway-node-modules:/developer/nodejs/api-gateway/node_modules
  python_service:
    build: ./python-project
    networks:
      - micro-net
    ports:
      - "3005:3005"
  flights_service:
    build: ./Flights
    networks:
      - micro-net
    ports: 
      - "3000:3000"
    volumes:
      - ./Flights:/developer/nodejs/flights_service
      - flights-service-node-modules:/developer/nodejs/flights-service/node_modules
  booking_service:
    build: ./Flights-Booking-Service
    networks:
      - micro-net
    ports:
      - "4000:4000"
    volumes:
      - ./Flights-Booking-Service:/developer/nodejs/booking_service
      - booking-service-node-modules:/developer/nodejs/booking-service/node_modules
    
# docker compose up -d // run all containers in detached mode kind of like -dit

# docker build -t python-app .
# docker run -it --init --name python_service --network microservice-network -p 3005:3005 -v "$(pwd)":/developer/pythonproject/flask-app  python-app:latest
# docker run -dit --init --name api_gateway1 --network microservice-network -p 3001:3001 -v "$(pwd)":/developer/nodejs/api-gateway -v api-gateway-node-modules:/developer/nodejs/api-gateway/node_modules api-gateway:latest 
# docker run -it --init --name flights_service --network microservice-network  -p 3000:3000 -v "$(pwd)":/developer/nodejs/flights-service -v flights-service-node-modules:/developer/nodejs/flights-service/node_modules flights-service:latest
#  docker run -it --init --name booking_service --network microservice-network  -p 4000:4000 -v "$(pwd)":/developer/nodejs/booking-service -v booking-service-node-modules:/developer/nodejs/booking-service/node_modules booking-service:latest